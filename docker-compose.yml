version: "3.3"

services:
  database1:
    image: postgres:13.1-alpine
    container_name: raft_fcul_database_1
    stdin_open: true
    tty: true
    networks:
      - raft_fcul_network
    environment:
      POSTGRES_DB: raft_fcul
      POSTGRES_USER: user_with_big_pp
      POSTGRES_PASSWORD: send_bobs

  server1:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.server
    image: raft_fcul_server
    container_name: raft_fcul_server_1
    # command: sh -c "sleep 2 && npm run start:server --silent"
    stdin_open: true
    tty: true
    networks:
      - raft_fcul_network
    depends_on:
      - database1
    environment:
      - SERVERS=raft_fcul_server_2,raft_fcul_server_3,raft_fcul_server_4,raft_fcul_server_5
      - HOST=raft_fcul_server_1
      - LOG_LEVEL=debug
      - CLIENT_PORT=8080
      - SERVER_PORT=8081
      - MINIMUM_ELECTION_TIMEOUT=150
      - MAXIMUM_ELECTION_TIMEOUT=300
      - HEARTBEAT_TIMEOUT=50
      - DATABASE_URL=postgres://user_with_big_pp:send_bobs@raft_fcul_database_1:5432/raft_fcul

  database2:
    image: postgres:13.1-alpine
    container_name: raft_fcul_database_2
    stdin_open: true
    tty: true
    networks:
      - raft_fcul_network
    environment:
      POSTGRES_DB: raft_fcul
      POSTGRES_USER: user_with_big_pp
      POSTGRES_PASSWORD: send_bobs

  server2:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.server
    image: raft_fcul_server
    container_name: raft_fcul_server_2
    # command: sh -c "sleep 2 && npm run start:server --silent"
    stdin_open: true
    tty: true
    networks:
      - raft_fcul_network
    depends_on:
      - database2
    environment:
      - SERVERS=raft_fcul_server_1,raft_fcul_server_3,raft_fcul_server_4,raft_fcul_server_5
      - HOST=raft_fcul_server_2
      - LOG_LEVEL=debug
      - CLIENT_PORT=8080
      - SERVER_PORT=8081
      - MINIMUM_ELECTION_TIMEOUT=150
      - MAXIMUM_ELECTION_TIMEOUT=300
      - HEARTBEAT_TIMEOUT=50
      - DATABASE_URL=postgres://user_with_big_pp:send_bobs@raft_fcul_database_2:5432/raft_fcul

  database3:
    image: postgres:13.1-alpine
    container_name: raft_fcul_database_3
    stdin_open: true
    tty: true
    networks:
      - raft_fcul_network
    environment:
      POSTGRES_DB: raft_fcul
      POSTGRES_USER: user_with_big_pp
      POSTGRES_PASSWORD: send_bobs

  server3:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.server
    image: raft_fcul_server
    container_name: raft_fcul_server_3
    # command: sh -c "sleep 2 && npm run start:server --silent"
    stdin_open: true
    tty: true
    networks:
      - raft_fcul_network
    depends_on:
      - database3
    environment:
      - SERVERS=raft_fcul_server_1,raft_fcul_server_2,raft_fcul_server_4,raft_fcul_server_5
      - HOST=raft_fcul_server_3
      - LOG_LEVEL=debug
      - CLIENT_PORT=8080
      - SERVER_PORT=8081
      - MINIMUM_ELECTION_TIMEOUT=150
      - MAXIMUM_ELECTION_TIMEOUT=300
      - HEARTBEAT_TIMEOUT=50
      - DATABASE_URL=postgres://user_with_big_pp:send_bobs@raft_fcul_database_3:5432/raft_fcul

  database4:
    image: postgres:13.1-alpine
    container_name: raft_fcul_database_4
    stdin_open: true
    tty: true
    networks:
      - raft_fcul_network
    environment:
      POSTGRES_DB: raft_fcul
      POSTGRES_USER: user_with_big_pp
      POSTGRES_PASSWORD: send_bobs

  server4:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.server
    image: raft_fcul_server
    container_name: raft_fcul_server_4
    # command: sh -c "sleep 2 && npm run start:server --silent"
    stdin_open: true
    tty: true
    networks:
      - raft_fcul_network
    depends_on:
      - database4
    environment:
      - SERVERS=raft_fcul_server_1,raft_fcul_server_2,raft_fcul_server_3,raft_fcul_server_5
      - HOST=raft_fcul_server_4
      - LOG_LEVEL=debug
      - CLIENT_PORT=8080
      - SERVER_PORT=8081
      - MINIMUM_ELECTION_TIMEOUT=150
      - MAXIMUM_ELECTION_TIMEOUT=300
      - HEARTBEAT_TIMEOUT=50
      - DATABASE_URL=postgres://user_with_big_pp:send_bobs@raft_fcul_database_4:5432/raft_fcul

  database5:
    image: postgres:13.1-alpine
    container_name: raft_fcul_database_5
    stdin_open: true
    tty: true
    networks:
      - raft_fcul_network
    environment:
      POSTGRES_DB: raft_fcul
      POSTGRES_USER: user_with_big_pp
      POSTGRES_PASSWORD: send_bobs

  server5:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.server
    image: raft_fcul_server
    container_name: raft_fcul_server_5
    # command: sh -c "sleep 2 && npm run start:server --silent"
    stdin_open: true
    tty: true
    networks:
      - raft_fcul_network
    depends_on:
      - database5
    environment:
      - SERVERS=raft_fcul_server_1,raft_fcul_server_2,raft_fcul_server_3,raft_fcul_server_4
      - HOST=raft_fcul_server_5
      - LOG_LEVEL=debug
      - CLIENT_PORT=8080
      - SERVER_PORT=8081
      - MINIMUM_ELECTION_TIMEOUT=150
      - MAXIMUM_ELECTION_TIMEOUT=300
      - HEARTBEAT_TIMEOUT=50
      - DATABASE_URL=postgres://user_with_big_pp:send_bobs@raft_fcul_database_5:5432/raft_fcul

  client:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.client
    image: raft_fcul_client
    stdin_open: true
    tty: true
    networks:
      - raft_fcul_network
    environment:
      - SERVERS=raft_fcul_server_1,raft_fcul_server_2,raft_fcul_server_3,raft_fcul_server_4,raft_fcul_server_5
      # - LOG_LEVEL=debug
      - LOG_LEVEL=silent
      - PORT=8080
      - WEBSOCKET=false
      - INTERACTIVE=false
      - PARALLEL_REQUESTS=1
      - REQUEST_INTERVAL=5000
    depends_on:
      - server1
      - server2
      - server3
      - server4
      - server5

networks:
  raft_fcul_network:
